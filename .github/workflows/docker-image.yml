name: Docker Image CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup Node.js environment
      uses: actions/setup-node@v3.2.0
      with:
        # Version Spec of the version to use. Examples: 12.x, 10.15.1, >=10.15.0.
        node-version: v16.14.2
    - name: compile
      run: cd api && unzip -o node_modules.zip && rm node_modules.zip && npm install
    - name: compile web
      run: cd web && unzip -o node_modules.zip && rm node_modules.zip && npm install && npm run build
    - name: docker login
      run: docker login --username=yww3571373 --password=${{ secrets.ALI_DOCKER_CREDENTIALS }} registry.cn-hangzhou.aliyuncs.com
    - name: gen version
      id: version
      run: echo "::set-output name=number::$(date +%s)"
    - name: Build the Docker API
      run: cd api && docker build . --file Dockerfile --tag registry.cn-hangzhou.aliyuncs.com/yinweiwen/github:demoapi-${{ steps.version.outputs.number }}
    - name: Build the Docker WEB
      run: cd web && docker build . --file Dockerfile --tag registry.cn-hangzhou.aliyuncs.com/yinweiwen/github:demoweb-${{ steps.version.outputs.number }}
    - name: publish API
      run: docker push registry.cn-hangzhou.aliyuncs.com/yinweiwen/github:demoapi-${{ steps.version.outputs.number }}
    - name: publish WEB
      run: docker push registry.cn-hangzhou.aliyuncs.com/yinweiwen/github:demoweb-${{ steps.version.outputs.number }}
    - name: publish on server
      uses: appleboy/ssh-action@master
      env:
        VERSION: ${{ steps.version.outputs.number }}
      with:
        host: ${{ secrets.ALI_HOST }}
        username: ${{ secrets.ALI_USERNAME }}
        password: ${{ secrets.ALI_SECRET }}
        port: 22
        envs: VERSION
        script: |
          whoami
          cd /root
          sed -i 's/demoweb\-.*$/demoweb\-'"$VERSION"'/g' /root/docker-compose.yml
          sed -i 's/demoapi\-.*$/demoapi\-'"$VERSION"'/g' /root/docker-compose.yml
          docker-compose up -d
